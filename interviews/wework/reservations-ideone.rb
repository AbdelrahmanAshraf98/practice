class Reservations

    def initialize(date)
        @date = date
        @file = ["1,600,2014-07-01,",
            "1,400,2014-04-02,",
            "1,400,2014-05-01,",
            "5,2800,2014-03-01,2014-04-30",
            "2,1500,2014-05-01,2014-06-30",
            "4,1700,2014-04-01,",
            "3,1300,2014-04-01,",
            "15,6500,2014-05-01,2014-08-31",
            "1,400,2014-05-01,",
            "1,400,2014-05-01,",
            "3,1400,2014-05-01,",
            "18,7200,2014-05-01,",
            "1,800,2014-06-01,",
            "1,700,2014-05-01,2014-06-30",
            "2,1250,2014-04-16,2014-06-02",
            "1,600,2013-11-01,2014-05-31",
            "8,4000,2014-06-02,2014-07-31",
            "2,1300,2014-05-01,2014-10-31",
            "4,2200,2014-05-01,",
            "14,11875,2014-06-01,",
            "2,1500,2014-05-01,2014-08-31",
            "2,1500,2012-06-01,",
            "3,1850,2014-04-09,2014-08-06",
            "2,1100,2014-05-01,2014-09-30",
            "1,625,2014-04-11,",
            "1,1000,2014-02-14,",
            "1,400,2014-05-01,",
            "6,3600,2014-04-02,",
            "2,950,2013-02-01,2014-05-31",
            "4,2500,2013-06-01,2014-04-30",
            "2,1200,2014-07-01,2014-08-31",
            "1,950,2014-06-01,2014-08-31",
            "4,3200,2014-04-01,2014-09-30",
            "1,400,2014-03-27,2014-04-10",
            "4,2600,2014-02-01,2014-04-08",
            "11,5500,2014-05-01,",
            "2,1200,2014-05-01,2014-07-02",
            "1,600,2014-05-01,2014-07-31",
            "1,800,2013-11-01,2014-04-30",
            "1,700,2013-05-01,",
            "2,900,2014-07-01,2014-08-31",
            "2,1400,2014-04-02,",
            "2,1500,2014-05-01,",
            "2,1200,2014-05-01,",
            "2,1500,2014-05-01,2014-10-31",
            "2,900,2014-02-01,",
            "1,400,2014-04-14,",
            "2,900,2014-01-01,2014-06-30",
            "2,1000,2013-12-01,2014-06-30",
            "9,4500,2014-02-06,2014-04-30",
            "4,2500,2013-08-01,",
            "6,2900,2013-05-01,2014-05-31",
            "1,600,2014-04-09,",
            "2,1700,2014-02-14,2014-04-30",
            "2,900,2014-07-01,",
            "1,400,2014-05-01,2014-10-31",
            "2,0,2014-04-15,2014-05-01",
            "4,2500,2014-05-01,",
            "4,3600,2014-05-01,",
            "9,4950,2014-05-01,",
            "2,1100,2014-05-12,",
            "6,2700,2014-05-01,2014-08-31",
            "16,350,2014-04-01,2014-08-31",
            "2,1300,2012-10-01,",
            "1,950,2014-06-01,2014-06-08",
            "3,2000,2014-06-01,2014-06-30",
            "8,3600,2014-07-08,",
            "6,5400,2014-05-12,",
            "4,2700,2013-09-01,",
            "4,2600,2012-06-01,2014-05-31",
            "4,2700,2012-07-01,2014-04-30",
            "1,450,2014-04-02,",
            "4,2700,2014-04-01,2014-04-30",
            "4,2200,2014-06-01,2014-10-31"]
        @months = {"01" => 31, "02" => 28, "03" => 31, "04" => 30,
            "05" => 31, "06" => 30, "07" => 31, "08"  => 31,
            "09" => 30, "10" => 31, "11" => 30, "12" => 31}
    end


    def check_month
        revenue = 0.00
        capacity = 0
        @file.each do |line|
            data = line.split(",")
            if (@date >= data[2][0..-4] and data[3] == nil)
                if (@date == data[2][0..-4])
                    revenue += prorate_start(data[1], data[2])
                else
                    revenue += data[1].to_i
                end
            elsif (@date >= data[2][0..-4] and not data[3] == nil and
                @date <= data[3][0..-4])
                if (@date == data[2][0..-4])
                    revenue += prorate_start(data[1], data[2])
                elsif (@date == data[3][0..-4])
                    revenue += prorate_end(data[1], data[3])
                else
                    revenue += data[1].to_i
                end
            elsif (not @date == data[2][0..-4])
                if (not data[3] == nil and not @date == data[3][0..-4])
                    capacity += data[0].to_i
                elsif (data[3] == nil)
                    capacity += data[0].to_i
                end
            end
        end
        puts "Expected Revenue: $%.2f" % (revenue)
        puts "Expected Total Capacity of Unreserved Offices: #{capacity}"
    end


    def prorate_start(price, date)
        days = @months[date[5..-4]]
        rate = (price.to_f / days) * (days - date[8..10].to_i + 1)
    end


    def prorate_end(price, date)
        days = @months[date[5..-4]]
        rate = (price.to_f / days) * date[8..10].to_i
    end

end


if __FILE__ == $0
    date = gets.chomp
    reservations = Reservations.new(date)
    reservations.check_month
end